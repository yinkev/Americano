/**
 * RecommendationsTab Component
 * Story 4.6 Task 9
 *
 * AI-powered study recommendations tab for Understanding Analytics Dashboard.
 * Displays actionable guidance based on comprehensive understanding validation metrics.
 *
 * Sections:
 * 1. Daily Insight Card - Prominent single recommendation with priority badge
 * 2. Weekly Top 3 Recommendations - Prioritized objectives with success indicators
 * 3. Intervention Suggestions - Pattern-based metacognitive interventions
 * 4. Study Strategy Insights - AI-generated optimization recommendations
 *
 * All recommendations generated by ChatMock/GPT-5 via Python FastAPI service.
 *
 * Design: Glassmorphism with OKLCH colors, min 44px touch targets
 *
 * @see /api/analytics/understanding/recommendations - API endpoint
 * @see useRecommendations - React Query hook
 */

'use client';

import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { useRecommendations } from '@/hooks/use-understanding-analytics';
import {
  Sparkles,
  Target,
  AlertTriangle,
  TrendingUp,
  Clock,
  BarChart3,
  ExternalLink,
  Lightbulb,
  Brain,
  CheckCircle2,
} from 'lucide-react';
import Link from 'next/link';

export default function RecommendationsTab() {
  const { data, isLoading, error } = useRecommendations();

  if (isLoading) {
    return <RecommendationsSkeleton />;
  }

  if (error) {
    return (
      <div className="text-center py-12">
        <p className="text-[oklch(0.65_0.20_25)]">
          Failed to load recommendations. Please try again.
        </p>
      </div>
    );
  }

  if (!data) return null;

  return (
    <div className="space-y-6">
      {/* Daily Insight Card - Prominent at Top */}
      <Card className="bg-card    shadow-none rounded-xl border-2 border-[oklch(0.6_0.18_280)]">
        <CardHeader className="pb-3">
          <div className="flex items-start justify-between gap-3">
            <div className="flex items-center gap-2">
              <Sparkles className="w-6 h-6 text-[oklch(0.6_0.18_280)]" />
              <CardTitle className="text-xl font-['DM_Sans']">Today's Focus</CardTitle>
            </div>
            <div className="flex items-center gap-2">
              <Badge
                variant="outline"
                className={`min-h-[32px] px-3 font-semibold ${getPriorityBadgeStyles(data.dailyInsight.priority)}`}
              >
                {getPriorityLabel(data.dailyInsight.priority)} PRIORITY
              </Badge>
              <Badge
                variant="outline"
                className="bg-[oklch(0.6_0.18_280)]/10 text-[oklch(0.5_0.18_280)] border-[oklch(0.6_0.18_280)] min-h-[32px]"
              >
                AI-Generated
              </Badge>
            </div>
          </div>
        </CardHeader>
        <CardContent className="space-y-4">
          <p className="text-lg text-[oklch(0.3_0.05_240)] leading-relaxed font-medium">
            {data.dailyInsight.message}
          </p>

          {data.dailyInsight.actions.length > 0 && (
            <div className="space-y-2">
              <h4 className="text-sm font-semibold text-[oklch(0.5_0.05_240)] uppercase tracking-wide">
                Recommended Actions
              </h4>
              <ul className="space-y-2">
                {data.dailyInsight.actions.map((action, idx) => (
                  <li
                    key={idx}
                    className="flex items-start gap-2 text-sm text-[oklch(0.4_0.05_240)]"
                  >
                    <CheckCircle2 className="w-4 h-4 text-[oklch(0.7_0.15_145)] flex-shrink-0 mt-0.5" />
                    <span>{action}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}

          <Link href="/study?createMission=true">
            <Button className="w-full min-h-[48px] bg-[oklch(0.6_0.18_280)] hover:bg-[oklch(0.55_0.18_280)] text-white font-semibold">
              <Target className="w-5 h-5 mr-2" />
              Create Mission from This Insight
            </Button>
          </Link>
        </CardContent>
      </Card>

      {/* Weekly Top 3 Recommendations */}
      <Card className="bg-card  shadow-none rounded-xl border-0">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-lg font-['DM_Sans']">
            <Target className="w-5 h-5 text-[oklch(0.6_0.18_230)]" />
            Weekly Top 3 Priorities
          </CardTitle>
          <p className="text-sm text-[oklch(0.6_0.05_240)] mt-1">
            Objectives recommended for focused study this week
          </p>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {data.weeklyTop3.length > 0 ? (
              data.weeklyTop3.map((recommendation, idx) => (
                <WeeklyRecommendationCard
                  key={recommendation.objectiveId}
                  rank={idx + 1}
                  {...recommendation}
                />
              ))
            ) : (
              <p className="text-sm text-[oklch(0.6_0.05_240)] text-center py-6">
                No recommendations available. Continue studying to generate personalized
                insights!
              </p>
            )}
          </div>
        </CardContent>
      </Card>

      {/* Intervention Suggestions */}
      <Card className="bg-card  shadow-none rounded-xl border-0">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-lg font-['DM_Sans']">
            <Brain className="w-5 h-5 text-[oklch(0.6_0.18_280)]" />
            Recommended Interventions
          </CardTitle>
          <p className="text-sm text-[oklch(0.6_0.05_240)] mt-1">
            Targeted strategies based on your validation patterns
          </p>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            {data.interventions.length > 0 ? (
              data.interventions.map((intervention, idx) => (
                <InterventionCard key={idx} {...intervention} />
              ))
            ) : (
              <p className="text-sm text-[oklch(0.6_0.05_240)] text-center py-6">
                No interventions needed - your study patterns are well-calibrated!
              </p>
            )}
          </div>
        </CardContent>
      </Card>

      {/* Study Strategy Insights */}
      <Card className="bg-card  shadow-none rounded-xl border-0">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-lg font-['DM_Sans']">
            <Lightbulb className="w-5 h-5 text-[oklch(0.75_0.12_85)]" />
            Study Strategy Insights
          </CardTitle>
          <p className="text-sm text-[oklch(0.6_0.05_240)] mt-1">
            AI-generated recommendations for optimal learning
          </p>
        </CardHeader>
        <CardContent className="space-y-4">
          {/* Time Investment Recommendations */}
          <div className="p-4 bg-[oklch(0.98_0.02_240)] rounded-lg border-l-4 border-[oklch(0.6_0.18_230)]">
            <div className="flex items-start gap-3">
              <Clock className="w-5 h-5 text-[oklch(0.6_0.18_230)] flex-shrink-0 mt-0.5" />
              <div className="flex-1">
                <h4 className="font-semibold text-[oklch(0.4_0.05_240)] mb-1">
                  Recommended Time Investment
                </h4>
                <div className="space-y-2 text-sm text-[oklch(0.5_0.05_240)]">
                  <div className="flex items-center justify-between">
                    <span>Daily Target:</span>
                    <span className="font-semibold text-[oklch(0.3_0.05_240)]">
                      {data.timeEstimates.dailyRecommended} minutes
                    </span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span>Weekly Target:</span>
                    <span className="font-semibold text-[oklch(0.3_0.05_240)]">
                      {Math.floor(data.timeEstimates.weeklyRecommended / 60)} hours{' '}
                      {data.timeEstimates.weeklyRecommended % 60} minutes
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Success Probability Predictions */}
          <div className="p-4 bg-[oklch(0.98_0.03_145)] rounded-lg border-l-4 border-[oklch(0.7_0.15_145)]">
            <div className="flex items-start gap-3">
              <TrendingUp className="w-5 h-5 text-[oklch(0.7_0.15_145)] flex-shrink-0 mt-0.5" />
              <div className="flex-1">
                <h4 className="font-semibold text-[oklch(0.4_0.05_240)] mb-3">
                  Success Predictions
                </h4>
                <div className="space-y-3">
                  <div>
                    <div className="flex items-center justify-between mb-1">
                      <span className="text-sm text-[oklch(0.5_0.05_240)]">
                        Next Week
                      </span>
                      <span className="text-sm font-semibold text-[oklch(0.3_0.05_240)]">
                        {Math.round(data.successProbs.nextWeek * 100)}%
                      </span>
                    </div>
                    <div className="h-2 bg-[oklch(0.95_0.02_145)] rounded-full overflow-hidden">
                      <div
                        className="h-full bg-[oklch(0.7_0.15_145)] rounded-full transition-all duration-500"
                        style={{ width: `${data.successProbs.nextWeek * 100}%` }}
                      />
                    </div>
                  </div>
                  <div>
                    <div className="flex items-center justify-between mb-1">
                      <span className="text-sm text-[oklch(0.5_0.05_240)]">
                        Next Month
                      </span>
                      <span className="text-sm font-semibold text-[oklch(0.3_0.05_240)]">
                        {Math.round(data.successProbs.nextMonth * 100)}%
                      </span>
                    </div>
                    <div className="h-2 bg-[oklch(0.95_0.02_145)] rounded-full overflow-hidden">
                      <div
                        className="h-full bg-[oklch(0.7_0.15_145)] rounded-full transition-all duration-500"
                        style={{ width: `${data.successProbs.nextMonth * 100}%` }}
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* AI Strategy Note */}
          <div className="p-3 bg-[oklch(0.98_0.02_280)] rounded-lg flex items-start gap-2">
            <Brain className="w-4 h-4 text-[oklch(0.6_0.18_280)] flex-shrink-0 mt-0.5" />
            <p className="text-xs text-[oklch(0.5_0.05_240)] leading-relaxed">
              <span className="font-semibold">AI Analysis:</span> Recommendations are
              personalized based on your comprehension patterns, calibration accuracy, and
              historical performance trends. They update dynamically as you progress.
            </p>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}

/**
 * WeeklyRecommendationCard Component
 *
 * Displays a single recommended objective with reasoning and action button.
 */
interface WeeklyRecommendationCardProps {
  rank: number;
  objectiveId: string;
  objectiveName: string;
  reason: string;
  estimatedTime: number; // minutes
  priority: number; // 1-10
}

function WeeklyRecommendationCard({
  rank,
  objectiveId,
  objectiveName,
  reason,
  estimatedTime,
  priority,
}: WeeklyRecommendationCardProps) {
  const rankColors = [
    'oklch(0.65 0.20 25)', // Red for #1
    'oklch(0.75 0.12 85)', // Yellow for #2
    'oklch(0.6 0.18 230)', // Blue for #3
  ];

  return (
    <div className="p-4 bg-[oklch(0.99_0.01_240)] rounded-xl border border-[oklch(0.9_0.02_240)] hover:shadow-none transition-shadow-none">
      <div className="flex items-start gap-4">
        {/* Rank Badge */}
        <div
          className="flex-shrink-0 w-12 h-12 rounded-full flex items-center justify-center font-bold text-xl text-white"
          style={{ backgroundColor: rankColors[rank - 1] }}
        >
          {rank}
        </div>

        {/* Content */}
        <div className="flex-1 space-y-2">
          <div className="flex items-start justify-between gap-3">
            <h4 className="font-semibold text-[oklch(0.3_0.05_240)] text-lg">
              {objectiveName}
            </h4>
            <Badge
              variant="outline"
              className="bg-[oklch(0.6_0.18_230)]/10 text-[oklch(0.5_0.18_230)] border-[oklch(0.6_0.18_230)]"
            >
              Priority {priority}/10
            </Badge>
          </div>

          <p className="text-sm text-[oklch(0.5_0.05_240)] leading-relaxed">
            <span className="font-medium text-[oklch(0.4_0.05_240)]">Why now:</span>{' '}
            {reason}
          </p>

          <div className="flex items-center gap-4 text-sm text-[oklch(0.6_0.05_240)]">
            <div className="flex items-center gap-1">
              <Clock className="w-4 h-4" />
              <span>
                {estimatedTime < 60
                  ? `${estimatedTime} min`
                  : `${Math.floor(estimatedTime / 60)}h ${estimatedTime % 60}m`}
              </span>
            </div>
            <div className="flex items-center gap-1">
              <BarChart3 className="w-4 h-4" />
              <span>Study session recommended</span>
            </div>
          </div>

          <Link href={`/study?objective=${objectiveId}`}>
            <Button
              variant="outline"
              className="w-full min-h-[44px] border-[oklch(0.6_0.18_230)] text-[oklch(0.5_0.18_230)] hover:bg-[oklch(0.6_0.18_230)] hover:text-white"
            >
              Start Study Session
              <ExternalLink className="w-4 h-4 ml-2" />
            </Button>
          </Link>
        </div>
      </div>
    </div>
  );
}

/**
 * InterventionCard Component
 *
 * Displays a pattern-based intervention suggestion with action button.
 */
interface InterventionCardProps {
  type: 'overconfidence' | 'underconfidence' | 'failure_pattern' | 'knowledge_gap';
  description: string;
  recommendedAction: string;
  affectedObjectives: string[];
}

function InterventionCard({
  type,
  description,
  recommendedAction,
  affectedObjectives,
}: InterventionCardProps) {
  const interventionStyles = {
    overconfidence: {
      icon: AlertTriangle,
      color: 'oklch(0.65 0.20 25)',
      bg: 'oklch(0.98 0.03 25)',
      border: 'oklch(0.65 0.20 25)',
      label: 'Overconfidence Detected',
      actionLabel: 'Practice Controlled Failures',
      actionLink: '/progress/calibration',
    },
    underconfidence: {
      icon: TrendingUp,
      color: 'oklch(0.6 0.18 230)',
      bg: 'oklch(0.98 0.02 230)',
      border: 'oklch(0.6 0.18 230)',
      label: 'Underconfidence Pattern',
      actionLabel: 'Build Confidence',
      actionLink: '/progress/calibration',
    },
    failure_pattern: {
      icon: Target,
      color: 'oklch(0.75 0.12 85)',
      bg: 'oklch(0.98 0.02 85)',
      border: 'oklch(0.75 0.12 85)',
      label: 'Repeated Failure Pattern',
      actionLabel: 'Practice Clinical Scenarios',
      actionLink: '/progress/clinical-reasoning',
    },
    knowledge_gap: {
      icon: Brain,
      color: 'oklch(0.6 0.18 280)',
      bg: 'oklch(0.98 0.02 280)',
      border: 'oklch(0.6 0.18 280)',
      label: 'Knowledge Gap Identified',
      actionLabel: 'Review Comprehension',
      actionLink: '/progress/comprehension',
    },
  };

  const styles = interventionStyles[type];
  const Icon = styles.icon;

  return (
    <div
      className="p-4 rounded-lg border-l-4"
      style={{ backgroundColor: styles.bg, borderColor: styles.border }}
    >
      <div className="space-y-3">
        <div className="flex items-start gap-3">
          <Icon className="w-5 h-5 flex-shrink-0 mt-0.5" style={{ color: styles.color }} />
          <div className="flex-1">
            <div className="flex items-start justify-between gap-3 mb-2">
              <h4 className="font-semibold" style={{ color: styles.color }}>
                {styles.label}
              </h4>
              {affectedObjectives.length > 0 && (
                <Badge
                  variant="outline"
                  style={{
                    backgroundColor: 'white',
                    color: styles.color,
                    borderColor: styles.color,
                  }}
                >
                  {affectedObjectives.length} objective
                  {affectedObjectives.length !== 1 ? 's' : ''}
                </Badge>
              )}
            </div>
            <p className="text-sm text-[oklch(0.4_0.05_240)] leading-relaxed mb-2">
              {description}
            </p>
            <p className="text-sm text-[oklch(0.5_0.05_240)] mb-3">
              <span className="font-medium text-[oklch(0.4_0.05_240)]">
                Recommended:
              </span>{' '}
              {recommendedAction}
            </p>
            <Link href={styles.actionLink}>
              <Button
                variant="outline"
                className="w-full min-h-[44px]"
                style={{
                  borderColor: styles.color,
                  color: styles.color,
                }}
              >
                {styles.actionLabel}
                <ExternalLink className="w-4 h-4 ml-2" />
              </Button>
            </Link>
          </div>
        </div>
      </div>
    </div>
  );
}

/**
 * Helper Functions
 */
function getPriorityLabel(priority: number): string {
  if (priority >= 8) return 'HIGH';
  if (priority >= 5) return 'MEDIUM';
  return 'LOW';
}

function getPriorityBadgeStyles(priority: number): string {
  if (priority >= 8) {
    return 'bg-[oklch(0.65_0.20_25)]/10 text-[oklch(0.65_0.20_25)] border-[oklch(0.65_0.20_25)]';
  }
  if (priority >= 5) {
    return 'bg-[oklch(0.75_0.12_85)]/10 text-[oklch(0.5_0.12_85)] border-[oklch(0.75_0.12_85)]';
  }
  return 'bg-[oklch(0.6_0.18_230)]/10 text-[oklch(0.5_0.18_230)] border-[oklch(0.6_0.18_230)]';
}

/**
 * RecommendationsSkeleton Component
 *
 * Loading skeleton with glassmorphism design matching the main component.
 */
function RecommendationsSkeleton() {
  return (
    <div className="space-y-6">
      {/* Daily Insight Skeleton */}
      <Card className="animate-pulse bg-card  rounded-xl border-0 shadow-none">
        <CardHeader>
          <div className="flex items-center justify-between">
            <div className="h-6 w-48 bg-[oklch(0.9_0.05_240)] rounded" />
            <div className="flex gap-2">
              <div className="h-8 w-24 bg-[oklch(0.9_0.05_240)] rounded" />
              <div className="h-8 w-32 bg-[oklch(0.9_0.05_240)] rounded" />
            </div>
          </div>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="h-6 w-full bg-[oklch(0.9_0.05_240)] rounded" />
          <div className="h-6 w-3/4 bg-[oklch(0.9_0.05_240)] rounded" />
          <div className="h-12 w-full bg-[oklch(0.9_0.05_240)] rounded" />
        </CardContent>
      </Card>

      {/* Weekly Top 3 Skeleton */}
      <Card className="animate-pulse bg-card  rounded-xl border-0 shadow-none">
        <CardHeader>
          <div className="h-6 w-56 bg-[oklch(0.9_0.05_240)] rounded" />
        </CardHeader>
        <CardContent className="space-y-4">
          {[1, 2, 3].map((i) => (
            <div key={i} className="h-32 w-full bg-[oklch(0.9_0.05_240)] rounded-lg" />
          ))}
        </CardContent>
      </Card>

      {/* Interventions Skeleton */}
      <Card className="animate-pulse bg-card  rounded-xl border-0 shadow-none">
        <CardHeader>
          <div className="h-6 w-64 bg-[oklch(0.9_0.05_240)] rounded" />
        </CardHeader>
        <CardContent className="space-y-3">
          {[1, 2].map((i) => (
            <div key={i} className="h-24 w-full bg-[oklch(0.9_0.05_240)] rounded-lg" />
          ))}
        </CardContent>
      </Card>
    </div>
  );
}
