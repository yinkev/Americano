/**
 * Research Analytics Test Page
 *
 * Test page for Bayesian ITS Dashboard integration (Day 7-8 implementation).
 * Displays the BayesianITSDashboard component with mock data for testing.
 *
 * Created: 2025-10-27T10:10:00-07:00
 * Part of: Day 7-8 Research Analytics Implementation
 *
 * Route: /research-analytics
 */

import BayesianITSDashboard from '@/components/research/BayesianITSDashboard';

export default function ResearchAnalyticsPage() {
  // Test parameters
  const userId = 'test-user-001';
  const interventionDate = '2025-10-01'; // Example intervention date
  const outcomeMetric = 'sessionPerformanceScore';

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-8">
      <div className="mx-auto max-w-7xl">
        {/* Page Header */}
        <div className="mb-8">
          <h1 className="mb-2 text-4xl font-bold">Research Analytics Dashboard</h1>
          <p className="text-gray-600">
            Bayesian Interrupted Time Series Analysis for n=1 Experiments
          </p>
          <div className="mt-4 flex gap-4 text-sm">
            <div className="rounded-md bg-blue-100 px-3 py-2">
              <span className="font-medium text-blue-900">User ID:</span>{' '}
              <code className="text-blue-700">{userId}</code>
            </div>
            <div className="rounded-md bg-green-100 px-3 py-2">
              <span className="font-medium text-green-900">Intervention:</span>{' '}
              <span className="text-green-700">{interventionDate}</span>
            </div>
            <div className="rounded-md bg-purple-100 px-3 py-2">
              <span className="font-medium text-purple-900">Metric:</span>{' '}
              <span className="text-purple-700">{outcomeMetric}</span>
            </div>
          </div>
        </div>

        {/* Dashboard Component */}
        <BayesianITSDashboard
          userId={userId}
          interventionDate={interventionDate}
          outcomeMetric={outcomeMetric}
          autoRun={false} // Require manual trigger for testing
        />

        {/* Testing Instructions */}
        <div className="mt-8 rounded-lg border border-yellow-200 bg-yellow-50 p-6">
          <h2 className="mb-4 text-xl font-semibold text-yellow-900">
            Testing Instructions
          </h2>
          <ol className="list-inside list-decimal space-y-2 text-sm text-yellow-800">
            <li>
              <strong>Start Python FastAPI service:</strong> Ensure the backend
              is running on port 8000
              <pre className="mt-2 rounded bg-yellow-100 p-2 font-mono text-xs">
                cd apps/ml-service
                <br />
                uvicorn app.main:app --reload --port 8000
              </pre>
            </li>
            <li>
              <strong>Click "Run Analysis":</strong> Triggers ITS analysis
              request to Python backend
            </li>
            <li>
              <strong>Wait 60-120 seconds:</strong> MCMC sampling takes time
              (loading state should show)
            </li>
            <li>
              <strong>Verify Results Display:</strong> Check that all components
              render:
              <ul className="ml-6 mt-2 list-disc space-y-1">
                <li>Causal effects summary cards (immediate, sustained, counterfactual)</li>
                <li>Probability of benefit progress bar</li>
                <li>Counterfactual chart with 4 plot tabs</li>
                <li>MCMC diagnostics panel with R-hat/ESS metrics</li>
                <li>MLflow run ID displayed at bottom</li>
              </ul>
            </li>
            <li>
              <strong>Test Error States:</strong>
              <ul className="ml-6 mt-2 list-disc space-y-1">
                <li>Stop Python service → Should show network error</li>
                <li>
                  Invalid user ID → Should show validation error (400)
                </li>
                <li>Re-run button → Should refetch data</li>
              </ul>
            </li>
          </ol>
        </div>

        {/* API Health Check */}
        <div className="mt-4 rounded-lg border border-gray-200 bg-white/80 p-4">
          <h3 className="mb-2 text-sm font-semibold">API Health Check</h3>
          <p className="text-xs text-gray-600">
            Python FastAPI:{' '}
            <a
              href="http://localhost:8000/docs"
              target="_blank"
              rel="noopener noreferrer"
              className="text-blue-600 hover:underline"
            >
              http://localhost:8000/docs
            </a>
          </p>
          <p className="text-xs text-gray-600">
            Next.js API Proxy:{' '}
            <code className="rounded bg-gray-100 px-1">
              POST /api/analytics/research/bayesian-its
            </code>
          </p>
        </div>
      </div>
    </div>
  );
}
