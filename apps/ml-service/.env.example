# Americano ML Service Environment Configuration
# Copy to .env and fill in your values

# Environment (development, staging, production)
ENVIRONMENT=development

# Server Configuration
PORT=8000
HOST=0.0.0.0

# Database (PostgreSQL via Prisma)
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=public
DATABASE_URL=postgresql://postgres:password@localhost:5432/americano?schema=public

# MLflow Tracking (server runs via docker-compose)
# Compose service uses these to connect to PostgreSQL backend store
MLFLOW_DB_USER=postgres
MLFLOW_DB_PASSWORD=password
MLFLOW_DB_HOST=host.docker.internal   # On macOS, resolves to host machine
MLFLOW_DB_PORT=5432
MLFLOW_DB_NAME=americano_mlflow

# Client-side tracking URI (Python scripts will default to this)
MLFLOW_TRACKING_URI=http://localhost:5000
MLFLOW_EXPERIMENT_NAME=Americano/Research

# DuckDB Analytics
# Persistent analytics database path (relative to apps/ml-service/)
DUCKDB_DB_PATH=./data/duckdb/analytics.duckdb
# Parquet exports (Day 3 outputs)
BEHAVIORAL_EVENTS_PARQUET=./data/parquet/behavioral_events_export.parquet
EXPERIMENT_PROTOCOLS_PARQUET=./data/parquet/experiment_protocols_export.parquet
# Optional: additional tables if available
PHASE_ASSIGNMENTS_PARQUET=./data/parquet/phase_assignments_export.parquet
ANALYSIS_RUNS_PARQUET=./data/parquet/analysis_runs_export.parquet

# Optional: direct PostgreSQL -> DuckDB sync (postgres_scanner)
# Set to true to enable direct scanning; otherwise Parquet load is used
DUCKDB_USE_POSTGRES_SCANNER=false
# If using postgres_scanner, these override DATABASE_URL parsing
PG_HOST=localhost
PG_PORT=5432
PG_USER=postgres
PG_PASSWORD=password
PG_DATABASE=americano

# Redis Cache Configuration (Day 7-8 Performance Optimization)
# Connection URL for Redis server
REDIS_URL=redis://localhost:6379
# Default TTL for cached results (seconds)
REDIS_TTL=300  # 5 minutes (balances freshness vs. performance)
# Note: Redis is optional - system gracefully degrades if unavailable

# CORS Origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=text  # text or json

# ML Model Configuration
MODEL_VERSION=v1.0
MODEL_TYPE=rule_based  # rule_based or logistic_regression
MODEL_PATH=./models

# Cache TTL (seconds)
CACHE_TTL_PROFILE=3600  # 1 hour
CACHE_TTL_PATTERNS=43200  # 12 hours
CACHE_TTL_METRICS=1800  # 30 minutes

# Performance
MAX_WORKERS=4
BATCH_SIZE=100
